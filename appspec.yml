# codedeploy 버전을 이야기함
# 프로젝트 버전이 아니므로 0.0 이외에 다른 버전을 사용하면 오류가 발생함
version: 0.0
os: linux
files:
  - source: /  # codedeploy에서 전달해 준 파일 중 destination으로 이동시킬 대상을 지정, 루트 경로를 지정하면 전체 파일을 이야기 한다.
#  step2   destination: /home/ec2-user/app/step2/zip/ # source에서 지정된 파일을 받을 위치입니다. 이후 jar를 실행하는 등 destination에서 옮긴 파일들로 진행됨
    destination: /home/ec2-user/app/step3/zip
    overwrite: yes # 기존에 파일이 존재하면 덮어쓸지 결정

permissions: # codedeploy에서 ec2 서버로 넘겨준 파일들을 모두 ec2-user 권한을 갖도록 한다.
  - object: /
    pattern: "**"
    owner: ec2-user
    group: ec2-user

hooks: # codedeploy 배포 단계에서 실행할 명령어를 지정한다. applicationstart라는 단계에서 deploy.sh를 ec2-user 권한으로 실행 -> step2
       # Jar 파일이 복사된 이후 부턴 차례로 앞선 스크립트들이 실행됨 ->step3
  AfterInstall:
    - location: stop.sh # 엔진엑스와 연결되어 있지 않은 스프링 부트를 종료.
      timeout: 60
      runas: ec2-user

  ApplicationStart:
 #   - location: deploy.sh -> step2
    - location: start.sh # 엔진엑스와 연결되어 있지 않은 port로 새 버전의 스프링 부트를 시작. -> step3
      timeout: 60 # 스크립트 실행 60초 이상 수행되면 실패가 됨(무한정 기다릴 수 없으니 시간 제한을 둬야만 한다)
      runas: ec2-user

  VaildateService:
    - location: health.sh # 새 스프링 부트가 정상적으로 실행됬는지 확인.
      timeout: 60
      runas: ec2-user

